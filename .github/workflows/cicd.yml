name: Deploy to GCP VM
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'
          project_id: '${{ secrets.GCP_PROJECT_ID }}'
      
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Configure gcloud and verify authentication
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          
          echo "=== All authenticated accounts ==="
          gcloud auth list
          
          echo "=== Active accounts only ==="
          gcloud auth list --filter=status:ACTIVE --format="value(account)"
          
          # Set the active account explicitly
          ACTIVE_ACCOUNT=$(gcloud auth list --filter=status:ACTIVE --format="value(account)" | head -1)
          if [ ! -z "$ACTIVE_ACCOUNT" ]; then
            gcloud config set account $ACTIVE_ACCOUNT
            echo "Set active account: $ACTIVE_ACCOUNT"
            
            echo "=== Final gcloud config ==="
            gcloud config list
          else
            echo "❌ No active account found"
            echo "All accounts:"
            gcloud auth list
            exit 1
          fi
      
      - name: Deploy via startup script (network-friendly)
        run: |
          echo "Startup script started"
          
          tar czf code.tar.gz --exclude='.git' --warning=no-file-changed .

          echo "phase 0"
          
          # Encode the archive as base64 for startup script
          base64 -w 0 code.tar.gz > code.tar.gz.b64

          echo "Phase 1"
          # Create a startup script that downloads and deploys
          cat > startup-script.sh << 'EOF'
          #!/bin/bash
          cd /tmp
          echo "ENCODED_ARCHIVE_HERE" | base64 -d > code.tar.gz
          mkdir -p /home/tanmaymi251/test
          cd /home/tanmaymi251/test
          tar xzf /tmp/code.tar.gz
          rm /tmp/code.tar.gz
          chown -R tanmaymi251:tanmaymi251 /home/tanmaymi251/test
          echo "Deployment completed" > /home/tanmaymi251/deploy.log
          EOF

          echo "phase 2"
          # Replace placeholder with actual encoded archive
          ENCODED_ARCHIVE=$(cat code.tar.gz.b64)
          sed -i "s/ENCODED_ARCHIVE_HERE/$ENCODED_ARCHIVE/" startup-script.sh

          echo "phase 3"
          
          # Update VM with startup script (this doesn't require SSH)
          gcloud compute instances add-metadata ubuntu-4gb \
            --zone=us-central1-c \
            --metadata-from-file startup-script=startup-script.sh

          echo "phase 4"
          
          # Restart VM to trigger startup script
          gcloud compute instances stop ubuntu-4gb --zone=us-central1-c
          sleep 10
          gcloud compute instances start ubuntu-4gb --zone=us-central1-c

          echo "Startup script ended"
